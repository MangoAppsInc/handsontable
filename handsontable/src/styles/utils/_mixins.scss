@mixin user-select-none {
    user-select: none;
    -webkit-tap-highlight-color: transparent;
    -webkit-overflow-scrolling: touch;
}

@mixin coursor-grab {
    cursor: move;
	cursor: -moz-grab;
	cursor: -webkit-grab;
	cursor: grab;
}

@mixin coursor-grabbing {
	cursor: move;
    cursor: -moz-grabbing;
    cursor: -webkit-grabbing;
    cursor: grabbing;
}

@mixin area-styles {
	position: relative;
	
	&:before {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: var(--hot-area-color);
	}
}

@mixin pseudo {
	content: '';
	display: block;
}

@mixin icon($name, $size: 16px, $color: null, $iconset: tabler) {
    width: $size;
    height: $size;
    display: inline-block;
    content:'';
    background: {
        image: url('icons/#{$iconset}/#{$name}.svg');
        size: contain;
        repeat: no-repeat;
    }

    @if $color != null {
        // This part assumes the SVGs are simple icons and allows color overrides
        mask: url('icons/#{$iconset}/#{$name}.svg') no-repeat center;
        background-color: $color;
        -webkit-mask: url('icons/#{$iconset}/#{$name}.svg') no-repeat center;
    }
}

@mixin selection-opacity($index) {
    $opacity: 0.1 + ($index * 0.07);
    .handsontable tbody td[rowspan][class*="area"][class*="highlight"][class*="fullySelectedMergedCell-#{$index}"]:before {
        opacity: $opacity;
    }
}

// Function to return opacity values - selection [area]
@function get-opacity($index) {
	@return 0.1 + ($index * 0.07);
}